trigger:
  branches:
    include:
      - master
  paths:
    include:
      - src/*
      - tests/*
      - Ampol.Digital.Common.VoucherManagementService.sln
      - pipelines/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: 'Build and Test'
  jobs:
  - job: Build
    displayName: 'Build & Test Job'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK 8.0.x'
      inputs:
        packageType: sdk
        version: '8.0.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: DotNetCoreCLI@2
      displayName: 'Restore packages'
      inputs:
        command: 'restore'
        projects: '$(solution)'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: 'Build solution'
      inputs:
        command: 'build'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration) --no-restore'

    - task: DotNetCoreCLI@2
      displayName: 'Run unit tests'
      inputs:
        command: 'test'
        projects: '**/tests/UnitTests/*.csproj'
        arguments: '--configuration $(buildConfiguration) --no-restore --no-build --collect "Code coverage"'

    - task: DotNetCoreCLI@2
      displayName: 'Publish API'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/src/Api/*.csproj'
        arguments: '--configuration $(buildConfiguration) --no-build --output $(Build.ArtifactStagingDirectory)/api'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifacts: api'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/api'
        ArtifactName: 'api'
        publishLocation: 'Container'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifacts: pipelines'
      inputs:
        PathtoPublish: 'pipelines'
        ArtifactName: 'pipelines'
        publishLocation: 'Container'
